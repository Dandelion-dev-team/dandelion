"""Initial migration.

Revision ID: cb31d15ea13c
Revises: 
Create Date: 2022-03-07 09:53:14.438674

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e9619687d684'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('authority',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=True),
    sa.Column('telephone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=40), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('project_image_link', sa.String(length=400), nullable=True),
    sa.Column('project_text', sa.String(length=200), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=1), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quantity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=True),
    sa.Column('unit', sa.String(length=5), nullable=True),
    sa.Column('help_url', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sensor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=60), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('URL', sa.String(length=200), nullable=True),
    sa.Column('datasheet_link', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tag_reference',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('school',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('authority_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('address_line_1', sa.String(length=150), nullable=True),
    sa.Column('address_line_2', sa.String(length=150), nullable=True),
    sa.Column('town', sa.String(length=50), nullable=True),
    sa.Column('postcode', sa.String(length=10), nullable=True),
    sa.Column('latitude', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('longitude', sa.DECIMAL(precision=9, scale=6), nullable=True),
    sa.Column('telephone', sa.String(length=15), nullable=True),
    sa.Column('email', sa.String(length=60), nullable=True),
    sa.Column('school_image_link', sa.String(length=400), nullable=True),
    sa.Column('status', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['authority_id'], ['authority.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sensor_quantity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sensor_id', sa.Integer(), nullable=False),
    sa.Column('quantity_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['quantity_id'], ['quantity.id'], ),
    sa.ForeignKeyConstraint(['sensor_id'], ['sensor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('node',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.Column('growcube_code', sa.String(length=200), nullable=True),
    sa.Column('mac_address', sa.String(length=200), nullable=True),
    sa.Column('last_communication_date', sa.DateTime(), nullable=True),
    sa.Column('next_communication_date', sa.DateTime(), nullable=True),
    sa.Column('health_status', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['school.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_partner',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('is_lead_partner', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['school.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=True),
    sa.Column('username', sa.String(length=20), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('is_sysadmin', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('notes', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['school.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('audit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('audit_date', sa.DateTime(), nullable=True),
    sa.Column('table_name', sa.String(length=100), nullable=True),
    sa.Column('primary_key_value', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('experiment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('project_partner_id', sa.Integer(), nullable=False),
    sa.Column('is_synchronised', sa.Boolean(), nullable=True),
    sa.Column('title', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('experiment_image_link', sa.String(length=300), nullable=True),
    sa.Column('experiment_text', sa.String(length=200), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=1), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['project_partner_id'], ['project_partner.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('node_alert',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('node_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['node_id'], ['node.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('node_sensor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('node_id', sa.Integer(), nullable=False),
    sa.Column('sensor_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['node_id'], ['node.id'], ),
    sa.ForeignKeyConstraint(['sensor_id'], ['sensor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_leader',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('session',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('login_timestamp', sa.DateTime(), nullable=True),
    sa.Column('logout_timestamp', sa.DateTime(), nullable=True),
    sa.Column('is_timed_out', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('audit_detail',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('audit_id', sa.Integer(), nullable=False),
    sa.Column('column_name', sa.String(length=100), nullable=True),
    sa.Column('old_value', sa.String(length=250), nullable=True),
    sa.ForeignKeyConstraint(['audit_id'], ['audit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('condition',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('experiment_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('condition_text', sa.String(length=200), nullable=True),
    sa.Column('status', sa.VARCHAR(length=1), nullable=True),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('experiment_participant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('experiment_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiment.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hypothesis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('experiment_id', sa.Integer(), nullable=False),
    sa.Column('hypothesis_no', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('hypothesis_text', sa.String(length=200), nullable=True),
    sa.Column('status', sa.VARCHAR(length=1), nullable=True),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('experiment_id', sa.Integer(), nullable=False),
    sa.Column('response_type', sa.VARCHAR(length=1), nullable=True),
    sa.Column('question_stage', sa.VARCHAR(length=1), nullable=True),
    sa.Column('status', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiment.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('report',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('experiment_id', sa.Integer(), nullable=False),
    sa.Column('report_stage', sa.VARCHAR(length=1), nullable=True),
    sa.Column('report_date', sa.DateTime(), nullable=True),
    sa.Column('title', sa.String(length=20), nullable=True),
    sa.Column('document_link', sa.String(length=200), nullable=True),
    sa.Column('status', sa.VARCHAR(length=1), nullable=True),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiment.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('experiment_id', sa.Integer(), nullable=False),
    sa.Column('tag_reference_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiment.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['tag_reference_id'], ['tag_reference.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('option',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.Column('label', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('response',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('option_id', sa.Integer(), nullable=False),
    sa.Column('response_text', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('variable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('condition_id', sa.Integer(), nullable=True),
    sa.Column('quantity_id', sa.Integer(), nullable=True),
    sa.Column('node_sensor_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=30), nullable=True),
    sa.Column('variable_role', sa.String(length=30), nullable=True),
    sa.Column('status', sa.VARCHAR(length=1), nullable=True),
    sa.ForeignKeyConstraint(['condition_id'], ['condition.id'], ),
    sa.ForeignKeyConstraint(['node_sensor_id'], ['node_sensor.id'], ),
    sa.ForeignKeyConstraint(['quantity_id'], ['quantity.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('condition_id'),
    sa.UniqueConstraint('node_sensor_id'),
    sa.UniqueConstraint('quantity_id')
    )
    op.create_table('observation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('variable_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(), nullable=True),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=1), nullable=True),
    sa.Column('comment', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['variable_id'], ['variable.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('observation')
    op.drop_table('variable')
    op.drop_table('response')
    op.drop_table('option')
    op.drop_table('tag')
    op.drop_table('report')
    op.drop_table('question')
    op.drop_table('hypothesis')
    op.drop_table('experiment_participant')
    op.drop_table('condition')
    op.drop_table('audit_detail')
    op.drop_table('session')
    op.drop_table('project_leader')
    op.drop_table('node_sensor')
    op.drop_table('node_alert')
    op.drop_table('experiment')
    op.drop_table('audit')
    op.drop_table('users')
    op.drop_table('project_partner')
    op.drop_table('node')
    op.drop_table('sensor_quantity')
    op.drop_table('school')
    op.drop_table('tag_reference')
    op.drop_table('sensor')
    op.drop_table('quantity')
    op.drop_table('project')
    op.drop_table('authority')
    # ### end Alembic commands ###
